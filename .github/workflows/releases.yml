name: Releases

on:
  pull_request:
    branches:
      - develop
      - main
    types:
      - closed

env:
  SLACK_MENTION: "UQ0KVAQ6T" #メンバーID # FIXME
  FLUTTER_CHANNEL: "stable" # FIXME
  FLUTTER_VERSION: "2.0.6" # FIXME

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      build_number: ${{ steps.calc_build_number.outputs.build_number }}
      build_name: ${{ steps.bump_tags.outputs.new_tag }}
      release_notes: ${{ steps.create_release_notes.outputs.release_notes }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      ### Set up ###
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Flutter Cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}

      - name: Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      ### Test ###
      - name: Test
        run: .github/workflows/scripts/test.sh

      - name: Codecov
        uses: codecov/codecov-action@v1
        continue-on-error: true
        timeout-minutes: 1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

      ### Release ###
      - name: Bump version and push tag
        id: bump_tags
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          TAG_CONTEXT: branch
          RELEASE_BRANCHES: ${{ (github.event.pull_request.base.ref == 'main' && 'main') || 'develop' }}

      - name: Create release notes
        id: create_release_notes
        run: echo "::set-output name=release_notes::${{ github.event.pull_request.title }} ${{ github.event.pull_request.html_url }}"

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_tags.outputs.new_tag }}
          release_name: ${{ steps.bump_tags.outputs.new_tag }}
          body: ${{ steps.create_release_notes.outputs.release_notes }}

      - name: git reset
        run: |
          git reset --hard
          git clean -fd

      - name: bump develop
        if: ${{ startsWith(github.event.pull_request.head.ref, 'release') }}
        run: |
          git checkout develop
          git -c user.name="GitHub Actions" -c user.email="actions@github.com" commit -m "#minor" --allow-empty
          git push

      - name: Calc build number
        id: calc_build_number
        run: echo "::set-output name=build_number::`git rev-list HEAD --count`"

      ### Slack ###
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          fields: repo,commit,job,took,workflow
          mention: ${{ env.SLACK_MENTION }}
          if_mention: always
          status: ${{ job.status }}
          text: ":white_check_mark: `${{ steps.bump_tags.outputs.new_tag }}` is now ready for release at ${{ steps.create_release.outputs.html_url }}"

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          fields: repo,commit,job,took,workflow
          mention: ${{ env.SLACK_MENTION }}
          if_mention: always
          status: ${{ job.status }}
          text: ":x: Failed to create a release."

  deploy:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        flavor: [dev, stg, prod]
        include:
          - os: ubuntu-latest
            platform: Android
            prebuild_script: .github/workflows/scripts/prebuild_android.sh
            postbuild_script: .github/workflows/scripts/postbuild_android.sh
            prepare_firebase_cli_script: .github/workflows/scripts/prepare_firebase_cli_linux.sh
            upload_release_asset_path: ./build/app/outputs/flutter-apk/app-release.apk
            upload_release_asset_path_store: ./build/app/outputs/bundle/release/app-release.aab
            upload_release_asset_content_type: application/vnd.android.package-archive
            upload_release_asset_content_type_store: application/octet-stream
            firebase_app_distribution_file: ./build/app/outputs/flutter-apk/app-release.apk
            flutter_path: /opt/hostedtoolcache/flutter

          - os: ubuntu-latest
            flavor: dev
            build_script: .github/workflows/scripts/build_android.sh dev ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: Android_dev.apk
            firebase_app_distribution_app_id: 1:636844036668:android:b09e49dce9d3527922a939 # FIXME
            firebase_app_distribution_groups: Tester # FIXME

          - os: ubuntu-latest
            flavor: stg
            build_script: .github/workflows/scripts/build_android.sh stg ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: Android_stg.apk
            firebase_app_distribution_app_id: 1:970978420457:android:d18cddc337585761bfb278 # FIXME
            firebase_app_distribution_groups: Tester # FIXME

          - os: ubuntu-latest
            flavor: prod
            build_script: .github/workflows/scripts/build_android.sh prod ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: Android_prod.apk
            upload_release_asset_name_store: Android_prod.aab
            firebase_app_distribution_app_id: 1:1066701925010:android:51be10ae2c513cc9e3944b # FIXME
            firebase_app_distribution_groups: Tester # FIXME

          - os: macos-latest
            platform: iOS
            prebuild_script: .github/workflows/scripts/prebuild_ios.sh
            postbuild_script: .github/workflows/scripts/postbuild_ios.sh
            prepare_firebase_cli_script: .github/workflows/scripts/prepare_firebase_cli_macos.sh
            upload_release_asset_path: ./build/ios/ipa.tar.gz
            upload_release_asset_path_store: ./build/ios/appStore.tar.gz
            upload_release_asset_content_type: application/octet-stream
            upload_release_asset_content_type_store: application/octet-stream
            firebase_app_distribution_file: ./build/ios/ipa/Runner.ipa
            flutter_path: /Users/runner/hostedtoolcache/flutter

          - os: macos-latest
            flavor: dev
            build_script: .github/workflows/scripts/build_ios.sh dev ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: iOS_dev.ipa.tar.gz
            firebase_app_distribution_app_id: 1:636844036668:ios:ccca644085de25c822a939 # FIXME
            firebase_app_distribution_groups: Tester # FIXME

          - os: macos-latest
            flavor: stg
            build_script: .github/workflows/scripts/build_ios.sh stg ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: iOS_stg.ipa.tar.gz
            firebase_app_distribution_app_id: 1:970978420457:ios:b7ecc1d711f47cd3bfb278 # FIXME
            firebase_app_distribution_groups: Tester # FIXME

          - os: macos-latest
            flavor: prod
            build_script: .github/workflows/scripts/build_ios.sh prod ${{ needs.release.outputs.build_name }} ${{ needs.release.outputs.build_number }}
            upload_release_asset_name: iOS_prod.ipa.tar.gz
            upload_release_asset_name_store: iOS_prod_appStore.ipa.tar.gz
            firebase_app_distribution_app_id: 1:1066701925010:ios:43c5707102329348e3944b # FIXME
            firebase_app_distribution_groups: Tester # FIXME
    runs-on: ${{ matrix.os }}
    env:
      MOBILEPROVISION_BASE64_DEV: ${{ secrets.MOBILEPROVISION_BASE64_DEV }}
      MOBILEPROVISION_BASE64_STG: ${{ secrets.MOBILEPROVISION_BASE64_STG }}
      MOBILEPROVISION_BASE64_PROD: ${{ secrets.MOBILEPROVISION_BASE64_PROD }}
      MOBILEPROVISION_BASE64_APP_STORE: ${{ secrets.MOBILEPROVISION_BASE64_APP_STORE }}
      P12_BASE64: ${{ secrets.P12_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

    steps:
      ### Set up ###
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Flutter Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}

      - name: CocoaPods Cache
        uses: actions/cache@v2
        if: ${{ matrix.platform == 'iOS' }}
        with:
          path: ./ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Gradle Cache
        uses: actions/cache@v2
        if: ${{ matrix.platform == 'Android' }}
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Set up Firebase CLI
        run: ${{ matrix.prepare_firebase_cli_script }}

      ### Build ###
      - name: Pre-Build
        run: ${{ matrix.prebuild_script }}

      - name: Build
        run: ${{ matrix.build_script }}

      - name: Post-Build
        if: always()
        run: ${{ matrix.postbuild_script }}

      ### Upload ###
      - name: Upload Release Asserts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.upload_release_asset_path }}
          asset_name: ${{ matrix.upload_release_asset_name }}
          asset_content_type: ${{ matrix.upload_release_asset_content_type }}

      - name: Upload Release Asserts for Store
        if: ${{ matrix.flavor == 'prod' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.upload_release_asset_path_store }}
          asset_name: ${{ matrix.upload_release_asset_name_store }}
          asset_content_type: ${{ matrix.upload_release_asset_content_type_store }}

      - name: Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase appdistribution:distribute \
            --app ${{ matrix.firebase_app_distribution_app_id }} \
            --release-notes "${{ needs.release.outputs.release_notes }}" \
            --groups ${{ matrix.firebase_app_distribution_groups }} \
            ${{ matrix.firebase_app_distribution_file }}

      ### Slack ###
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: '{"os": "${{ matrix.os }}", "flavor": "${{ matrix.flavor }}" }'
        with:
          fields: repo,commit,job,took,workflow
          mention: channel
          if_mention: always
          status: ${{ job.status }}
          text: |
            :rocket: The release of `${{ needs.release.outputs.build_name }}+${{ needs.release.outputs.build_number }}` for `${{ matrix.flavor }}-${{ matrix.platform }}` has been completed.
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: '{"os": "${{ matrix.os }}", "flavor": "${{ matrix.flavor }}" }'
        with:
          fields: repo,commit,job,took,workflow
          mention: channel
          if_mention: always
          status: ${{ job.status }}
          text: |
            :boom: The release of `${{ needs.release.outputs.build_name }}+${{ needs.release.outputs.build_number }}` for `${{ matrix.flavor }}-${{ matrix.platform }}` has been failed.
